tapply(x,f,mean)
tapply(x,f,mean)
tapply(x,f,mean, simplify = FALSE)
x<- c(rnorm(10), runif(10), rnorm(10,1))
f<- gl(3,10)
split(x,f)
split(x,f)
lapply(split(x,f), mean)
library(datasets)
head(airquality)
s<- split(airquality, airquiality$Month)
library(datasets)
s<- split(airquality, airquiality$Month)
head(airquality)
s<- split(airquality, airquality$Month)
s
lapply(s, function(x) colMeans(x[,c("Ozone", "Solar.R","Wind")]))
sapply(s, function(x) colMeans(x[,c("Ozone", "Solar.R","Wind")], na.rm = TRUE))
x<- rnorm(10)
f1<- gl(2,5)
f2<- gl(5,2)
f1
f2
interaction(f1,f2)
str(split(x, list(f1,f2)))
str(split(x, list(f1,f2), drop = TRUE))
LOG(-1)
log(-1)
log(-1)
printmessage(1)
printmessage<- function(x){
if(x>0)
print("x is greater than zero")
else
print("x is less than or equal to zero")
invisible(x)
}
printmessage(1)
printmessage(NA)
printmessage2<- function(x){
if(is.na(x))
print("x is a missing value!")
else if(x>0)
print("x is greater than zero")
else
print("x is less than or equal to zero")
invisible(x)
}
x<- log(-1)
printmessage2(x)
mean(x)
traceback()
library(datasets)
data(iris)
?iris
head(iris)
lapply(iris, mean)
x<- list(iris)
x
lapply(x, mean)
s<- split(airquality, airquality$Month)
s
x<- list(iris)
x
head(iris)
sum(iris$Sepal.Length)
head(iris)
?lynx
head(lynx)
head(iris)
attach(iris)
sum(Sepal.Length)
mean(iris$Sepal.Length)
mean(iris$Sepal.Length, iris%Species=setosa)
mean(iris$Sepal.Length, Species=setosa)
mean(iris$Sepal.Length, Species==setosa)
sum(iris$Sepal.Length)
head(iris)
sum(iris$Sepal.Length)
?lynx
head(lynx)
head(iris)
tail(lynx)
summary(lynx)
plot(lynx)
hist(lynx)
#work with subsets of those dataframes : $
head(iris)
sum(iris$Sepal.Length)
mean(iris$Sepal.Length)
attach(iris)
sum(Sepal.Length)
x<- list(a = 1:5, b = rnorm(10))
lapply(x, mean)
x<- 1:4
lapply(x, runif)
x<- matrix(rnorm(200), 20, 10)
x
###lo que hace es calcular la media de cada columna
apply(x,2, mean)
noise(5,1,2)
x <- c(rnorm(10), runif(10), rnorm(10,1))
x
f <- gl(3,10)
f
## [1] 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3
## Levels: 1 2 3
##toma grupo de medias
tapply(x,f,mean)
tapply(x,f,mean, simplify = FALSE)
##caDA uno contiene la media de cada subgrupo
## cada elemento es un vector de longitud
##split divide in little pieces an vector
x<- c(rnorm(10), runif(10), rnorm(10,1))
f<- gl(3,10)
split(x,f)
lapply(split(x,f), mean)
library(datasets)
head(airquality)
s<- split(airquality, airquality$Month)
s
lapply(s, function(x) colMeans(x[,c("Ozone", "Solar.R","Wind")]))
sapply(s, function(x) colMeans(x[,c("Ozone", "Solar.R","Wind")], na.rm = TRUE))
x<- rnorm(10)
f1<- gl(2,5)
f2<- gl(5,2)
f1
f2
interaction(f1,f2)
str(split(x, list(f1,f2)))
str(split(x, list(f1,f2), drop = TRUE))
log(-1)
rep(c(3,4,5),3)
x=c(1,2,3)
hist(lynx)
4+4+5
x = c(y,5,y)
x=5:7
y=8:10
plot(x,y)
#or by using dataset
plot(lynx)
plot(lynx, main="Lynx Trappings", col="red", col.main=52,cex.main=1.5)
head(iris)
s<- split(iris, iris$Species)
s
lapply(s, function(x) colMeans(x[, c("Sepal.Length")]))
head(airquality)
s
head(airquality)
s<- split(airquality, airquality$Month)
s
s<- split(iris, iris$Species)
s
lapply(s, function(x) colMeans(x[, c("Sepal.Length","Sepal.Width")]))
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
colMeans(iris)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
split(mtcars, mtcars$cyl)
apply(mtcars, 2, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
lapply(mtcars, mean)
head(mtcars)
split(mtcars, mtcars$cyl)
apply(mtcars, 2, mean)
head(mtcars)
split(mtcars, mtcars$cyl)
apply(mtcars, 2, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
lapply(mtcars, mean)
split(mtcars, mtcars$cyl)
apply(mtcars, 2, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
debug(ls)
ls
let avg4cyl = mtcars.Data |> Seq.filter (fun x -> x?cyl = "4") |> Seq.averageBy (fun x -> x?hp.AsFloat())
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
set.seed(1)
rpois(5, 2)
install.packages("swirl")
install_from_swirl("R Programming")
library(swirl)
swirl()
library(swirl)
swirl()
swirl()
swirl()
swirl()
install_from_swirl("R Programming")
library(swirl)
swirl()
5
5 + 7
x
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1,9,3.14)
?c
z
v <- c(z,555)
c(z,555,z)
z * 2 + 100
my_sqrt <- (z - 1)^2
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,100)
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10, by = 0.5)
my_seq <- seq(5,10, lenght = 30)
my_seq <- seq(5, 10, length = 30)
my_seq.length()
my_seq.length
length(my_seq)
1:length(my_seq)
seq(along.with = myseq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2) , each = 10)
swirl()
swirl()
library(swirl)
swirl()
num_vect <- c(0.5,55, -10, 6)
tf <- num_vect < 1
tf
tg <- num_vect >= 6
tf <- num_vect >= 6
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, " Luigi Omar")
my_name <- c(my_char, "Omar")
my_name
paste(my_name, collapse = " ")
paste("Hello", "World!", sep = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3),c("x","y","z"), sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
X * 3
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
-- NaN
0/0
inf - inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(x, by = 2)]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2 , norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
c[c("foo","bar")]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix,my_matrix2)
patients <- c("Bill", "Gina", "Kelly","Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_matrix)
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data) <- cnames
my_data
library(swirl)
swirl()
TRUE== TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!5==7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6!= 8 && 4 > 3.9
isTRUE(6 > 4)
identical("twins","twins")
xor(5==6,!FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
sapply(unique_vals,length)
sapply(unique_vals,unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
library(swirl)
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
its
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %y %H:%M")
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1 units = "days")
difftime(Sys.time(), t1 ,units = "days")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character"
)
outcome <- read.csv("C:\Users\comando\Desktop\coursera\outcome-of-care-measures.csv", colClasses = "character")
source("submitscript3.R")
colors()
?pch
?pch
plot(x, pch="c")
plot(x,pch=13)
par(mfrom=c(1,1),col.axis="black")
par(mfrow=c(1,1),col.axis="black")
par(mfrow=c(1,1),col.axis="black")
library(plotrix)
par()
par()
?rivers
library(xlsx)
install.packages(c("rJava", "xlsxjars"))
library(xlsx)
library(xlsx)
install.packages("xlsx")
library(xlsx)
library(xlsx)
install.packages("xlsx")
library(xlsx)
library(xlsx)
install.packages("rJava")
library(xlsx)
library(xlsx)
library(xlsx)
library(xlsx)
library(xlsx)
library(xlsx)
install.packages("rJava")
library(xlsx)
R.version()
R.Version()
qunif(0.75)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
library(data.table)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "ss06pid.csv")
download.file(url, f)
acs <- data.table(read.csv(f))
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
query2 <- sqldf("select pwgtp1 from acs")  ## NO
query3 <- sqldf("select * from acs where AGEP < 50 and pwgtp1")  ## NO
query4 <- sqldf("select * from acs where AGEP < 50")  ## NO
identical(query3, query4)
query1
library(data.table)
library(sqldf)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "ss06pid.csv")
download.file(url, f)
acs <- data.table(read.csv(f))
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
query2 <- sqldf("select pwgtp1 from acs")  ## NO
query3 <- sqldf("select * from acs where AGEP < 50 and pwgtp1")  ## NO
query4 <- sqldf("select * from acs where AGEP < 50")  ## NO
identical(query3, query4)
gold <- unique(acs$AGEP)
query1 <- sqldf("select distinct AGEP from acs")
query2 <- sqldf("select AGEP where unique from acs")
query3 <- sqldf("select unique * from acs")
query4 <- sqldf("select unique AGEP from acs")
identical(gold, query1)
identical(gold, query2)
identical(gold, query3)
identical(gold, query4)
query1 <- sqldf("select distinct(AGEP) from acs")
identical(gold, query1)
gold <- unique(acs$AGEP)
query1 <- sqldf("select distinct AGEP from acs")
identical(gold, query1)
query1
hurl <- "http://biostat.jhsph.edu/~jleek/contact.html"
con <- url(hurl)
htmlCode <- readLines(con)
close(con)
sapply(htmlCode[c(10, 20, 30, 100)], nchar)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
setwd("C:/Users/comando/Desktop/coursera")
setwd("C:/git/RepData_PeerAssessment1")
---
